name: Go
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  build:
    strategy:
      matrix:
        target:
          - windows-amd64
          - macos-amd64
          - linux-amd64
        include:
          - target: windows-am64
            os: windows-latest
          - target: macos-amd64
            os: macos-latest
          - target: linux-amd64
            os: linux-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: Install lib (linux)
        if: matrix.target == 'linux-amd64'
        run: |
          sudo apt-get update
          sudo apt-get install gcc libgl1-mesa-dev libegl1-mesa-dev libgles2-mesa-dev libx11-dev xorg-dev
      - name: Install cli (non-windows)
        if: matrix.target != 'windows-amd64'
        run: |
          GOBIN=$PWD go get golang.org/x/lint/golint
          GOBIN=$PWD go get fyne.io/fyne/v2/cmd/fyne
      - name: Install cli (windows)
        if: matrix.target == 'windows-amd64'
        run: |
          set GOBIN=%CD%
          go get golang.org/x/lint/golint
          go get fyne.io/fyne/v2/cmd/fyne
      - name: Build
        run: |
          go build -v .
      - name: Lint
        run: |
          go vet ./...
          golint -set_exit_status ./...
      - name: Packaging (windows)
        if: matrix.target == 'windows-amd64'
        run: fyne package -os windows -icon icon.png -release -appID com.github.mikan.arpg
      - name: Packaging (macos)
        if: matrix.target == 'macos-amd64'
        run: fyne package -os darwin -icon icon.png -release -appID com.github.mikan.arpg
      - name: Packaging (linux)
        if: matrix.target == 'linux-amd64'
        run: fyne package -os linux -icon icon.png -release -appID com.github.mikan.arpg
