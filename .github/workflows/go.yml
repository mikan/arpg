name: Go
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        go-version: [1.16]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Install deb package (linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install gcc libgl1-mesa-dev libegl1-mesa-dev libgles2-mesa-dev libx11-dev xorg-dev
      - name: Install cli (non-windows)
        if: runner.os != 'Windows'
        run: |
          GOBIN=$PWD/bin go get golang.org/x/lint/golint
          GOBIN=$PWD/bin go get fyne.io/fyne/v2/cmd/fyne
      - name: Install cli (windows)
        if: runner.os == 'Windows'
        run: |
          set GOBIN=%CD%\bin
          go get golang.org/x/lint/golint
          go get fyne.io/fyne/v2/cmd/fyne
      - name: Build
        run: |
          go build -v .
      - name: Lint (non-windows)
        if: runner.os != 'Windows'
        run: |
          go vet ./...
          ./bin/golint -set_exit_status ./...
      - name: Lint (windows)
        if: runner.os == 'Windows'
        run: |
          go vet ./...
          bin/golint -set_exit_status ./...
      - name: Packaging (windows)
        if: runner.os == 'Windows'
        run: bin\fyne package -os windows -icon icon.png -release -appID com.github.mikan.arpg
      - name: Packaging (macos)
        if: runner.os == 'macOS'
        run: ./bin/fyne package -os darwin -icon icon.png -release -appID com.github.mikan.arpg
      - name: Packaging (linux)
        if: runner.os == 'Linux'
        run: ./bin/fyne package -os linux -icon icon.png -release -appID com.github.mikan.arpg
